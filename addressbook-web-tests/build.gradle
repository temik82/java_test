buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure.gradle.allure:allure-plugin:2.11.2"
    }
}

apply plugin: "io.qameta.allure"
apply plugin: 'java'






repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.testng:testng:7.6.1'
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    implementation 'org.webjars.npm:commander:9.4.1'
    implementation 'com.thoughtworks.xstream:xstream:1.4.19'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.tersesystems.echopraxia:logback:2.2.4'
    implementation 'mysql:mysql-connector-java:8.0.31'
    implementation 'org.hibernate:hibernate-core:6.1.5.Final'
    implementation 'org.robotframework:robotframework:4.1.2'
    implementation 'io.cucumber:cucumber-java:7.10.1'
    implementation 'io.cucumber:cucumber-testng:7.10.1'
    implementation 'ru.yandex.qatools.allure:allure-java:1.3.9'

}



task testGroups(type: Test ){
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty("browser")) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty("platform")) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty("target")) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty("verifyUI")) {
        systemProperty 'verifyUI', "${verifyUI}"
    }

}
task testContacts(type: Test ){
    useTestNG{
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty("browser")) {
     systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty("platform")) {
        systemProperty 'platform', "${platform}"
    }

    if (project.hasProperty("target")) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty("verifyUI")) {
        systemProperty 'verifyUI', "${verifyUI}"
    }

    task rf(type: JavaExec) {
        main='org.robotframework.RobotFramework'
        classpath= sourceSets.test.runtimeClasspath
        args '--outputdir', 'build/rf-report'
        args 'src/test/resources/rf'

    }
}